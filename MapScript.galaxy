//==================================================================================================
// 
// Generated Map Script
// 
// Name:   To Borrow DRPG
// 
//==================================================================================================
include "TriggerLibs/NativeLib"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_InitializeShops;
trigger gt_ResetingTheArmorShop;
trigger gt_ResetingTheShardShop;
trigger gt_ResetingTheWeaponShop;
trigger gt_ResetingThePotionShop;
trigger gt_WhoOwnsTheArmorShop;
trigger gt_WhoOwnsTheShardShop;
trigger gt_WhoOwnsTheWeaponShop;
trigger gt_WhoOwnsThePotionShop;

//--------------------------------------------------------------------------------------------------
// Custom Script: aiDF9A5388
//--------------------------------------------------------------------------------------------------
//==================================================================================================
// 
// Generated AI Script
// 
// AI Name: Quest Givers
// 
//==================================================================================================
include "TriggerLibs/natives"
include "TriggerLibs/AI"
include "TriggerLibs/Computer"
//--------------------------------------------------------------------------------------------------
// Globals
//--------------------------------------------------------------------------------------------------
point[17] aiDF9A5388_defGather;
string[17] aiDF9A5388_customData;
wave[17] aiDF9A5388_lastWave;
//--------------------------------------------------------------------------------------------------
// Attack Wave Wrappers
//--------------------------------------------------------------------------------------------------
void aiDF9A5388_wave_enable (int w, int p, bool val) {
}
//--------------------------------------------------------------------------------------------------
bool aiDF9A5388_wave_isEnabled (int w, int p) {
    return false;
}
//--------------------------------------------------------------------------------------------------
unitgroup aiDF9A5388_wave_createdUnits (int w, int p) {
    return null;
}
//--------------------------------------------------------------------------------------------------
wave aiDF9A5388_wave_createdWave (int w, int p) {
    return null;
}
//--------------------------------------------------------------------------------------------------
void aiDF9A5388_wave_run (int w, int p, playergroup target, bool wait) {
}
//--------------------------------------------------------------------------------------------------
// Attack Wave Sequence
//--------------------------------------------------------------------------------------------------
trigger aiDF9A5388_waves_trigger = null;
int aiDF9A5388_waves_runPlayer;
playergroup aiDF9A5388_waves_runTarget;
//--------------------------------------------------------------------------------------------------
void aiDF9A5388_waves_init () {
    aiDF9A5388_waves_trigger = TriggerCreate("aiDF9A5388_waves_runFunc");
}
//--------------------------------------------------------------------------------------------------
bool aiDF9A5388_waves_runFunc (bool c, bool a) {
    int p = aiDF9A5388_waves_runPlayer;
    playergroup target = aiDF9A5388_waves_runTarget;
    if (p < 0 || p >= 16) {
        return false;
    }
    return true;
}
//--------------------------------------------------------------------------------------------------
void aiDF9A5388_waves_run (int p, playergroup target) {
    aiDF9A5388_waves_runPlayer = p;
    aiDF9A5388_waves_runTarget = PlayerGroupCopy(target);
    TriggerExecute(aiDF9A5388_waves_trigger, false, false);
}
//--------------------------------------------------------------------------------------------------
void aiDF9A5388_waves_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
}
//--------------------------------------------------------------------------------------------------
void aiDF9A5388_waves_stop () {
    TriggerStop(aiDF9A5388_waves_trigger);
}
//--------------------------------------------------------------------------------------------------
// Configuration
//--------------------------------------------------------------------------------------------------
void aiDF9A5388_setDefGather (int p, point val) {
    if (p < 0 || p >= 16) {
        return;
    }
    aiDF9A5388_defGather[p] = val;
}
//--------------------------------------------------------------------------------------------------
string aiDF9A5388_getCustomData (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiDF9A5388_customData[p];
}
//--------------------------------------------------------------------------------------------------
wave aiDF9A5388_getLastWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return aiDF9A5388_lastWave[p];
}
//--------------------------------------------------------------------------------------------------
// Start
//--------------------------------------------------------------------------------------------------
bool aiDF9A5388_initialized = false;
//--------------------------------------------------------------------------------------------------
void aiDF9A5388_start (int p) {
    int init_i;
    if (p < 0 || p >= 16) {
        return;
    }
    if (!aiDF9A5388_initialized) {
        aiDF9A5388_waves_init();
        for (init_i = 0; init_i <= 16; init_i += 1) {
            aiDF9A5388_defGather[init_i] = PointFromId(0);
        }
        aiDF9A5388_initialized = true;
    }
    AICampaignStart(p);
}

//--------------------------------------------------------------------------------------------------
// Custom Script: ai665651A4
//--------------------------------------------------------------------------------------------------
//==================================================================================================
// 
// Generated AI Script
// 
// AI Name: Cinematic
// 
//==================================================================================================
include "TriggerLibs/natives"
include "TriggerLibs/AI"
include "TriggerLibs/Computer"
//--------------------------------------------------------------------------------------------------
// Globals
//--------------------------------------------------------------------------------------------------
point[17] ai665651A4_defGather;
string[17] ai665651A4_customData;
wave[17] ai665651A4_lastWave;
//--------------------------------------------------------------------------------------------------
// Attack Wave Wrappers
//--------------------------------------------------------------------------------------------------
void ai665651A4_wave_enable (int w, int p, bool val) {
}
//--------------------------------------------------------------------------------------------------
bool ai665651A4_wave_isEnabled (int w, int p) {
    return false;
}
//--------------------------------------------------------------------------------------------------
unitgroup ai665651A4_wave_createdUnits (int w, int p) {
    return null;
}
//--------------------------------------------------------------------------------------------------
wave ai665651A4_wave_createdWave (int w, int p) {
    return null;
}
//--------------------------------------------------------------------------------------------------
void ai665651A4_wave_run (int w, int p, playergroup target, bool wait) {
}
//--------------------------------------------------------------------------------------------------
// Attack Wave Sequence
//--------------------------------------------------------------------------------------------------
trigger ai665651A4_waves_trigger = null;
int ai665651A4_waves_runPlayer;
playergroup ai665651A4_waves_runTarget;
//--------------------------------------------------------------------------------------------------
void ai665651A4_waves_init () {
    ai665651A4_waves_trigger = TriggerCreate("ai665651A4_waves_runFunc");
}
//--------------------------------------------------------------------------------------------------
bool ai665651A4_waves_runFunc (bool c, bool a) {
    int p = ai665651A4_waves_runPlayer;
    playergroup target = ai665651A4_waves_runTarget;
    if (p < 0 || p >= 16) {
        return false;
    }
    return true;
}
//--------------------------------------------------------------------------------------------------
void ai665651A4_waves_run (int p, playergroup target) {
    ai665651A4_waves_runPlayer = p;
    ai665651A4_waves_runTarget = PlayerGroupCopy(target);
    TriggerExecute(ai665651A4_waves_trigger, false, false);
}
//--------------------------------------------------------------------------------------------------
void ai665651A4_waves_enable (int p, bool val) {
    if (p < 0 || p >= 16) {
        return;
    }
}
//--------------------------------------------------------------------------------------------------
void ai665651A4_waves_stop () {
    TriggerStop(ai665651A4_waves_trigger);
}
//--------------------------------------------------------------------------------------------------
// Configuration
//--------------------------------------------------------------------------------------------------
void ai665651A4_setDefGather (int p, point val) {
    if (p < 0 || p >= 16) {
        return;
    }
    ai665651A4_defGather[p] = val;
}
//--------------------------------------------------------------------------------------------------
string ai665651A4_getCustomData (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai665651A4_customData[p];
}
//--------------------------------------------------------------------------------------------------
wave ai665651A4_getLastWave (int p) {
    if (p < 0 || p >= 16) {
        return null;
    }
    return ai665651A4_lastWave[p];
}
//--------------------------------------------------------------------------------------------------
// Start
//--------------------------------------------------------------------------------------------------
bool ai665651A4_initialized = false;
//--------------------------------------------------------------------------------------------------
void ai665651A4_start (int p) {
    int init_i;
    if (p < 0 || p >= 16) {
        return;
    }
    if (!ai665651A4_initialized) {
        ai665651A4_waves_init();
        for (init_i = 0; init_i <= 16; init_i += 1) {
            ai665651A4_defGather[init_i] = PointFromId(0);
        }
        ai665651A4_initialized = true;
    }
    AICampaignStart(p);
}

//--------------------------------------------------------------------------------------------------
// Custom Script: include_custom_scripts
//--------------------------------------------------------------------------------------------------
include "Script/main"

//--------------------------------------------------------------------------------------------------
// Custom Script Initialization
//--------------------------------------------------------------------------------------------------
void InitCustomScript () {
    aiDF9A5388_waves_init();
    ai665651A4_waves_init();
    main();
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 001
//--------------------------------------------------------------------------------------------------
bool gt_InitializeShops_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetOwner(UnitFromId(660), 0, true);
    UnitSetOwner(UnitFromId(2777), 0, true);
    UnitSetOwner(UnitFromId(240), 0, true);
    UnitSetOwner(UnitFromId(1202), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InitializeShops_Init () {
    gt_InitializeShops = TriggerCreate("gt_InitializeShops_Func");
    TriggerAddEventMapInit(gt_InitializeShops);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 007
//--------------------------------------------------------------------------------------------------
bool gt_ResetingTheArmorShop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetOwner(UnitFromId(660), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ResetingTheArmorShop_Init () {
    gt_ResetingTheArmorShop = TriggerCreate("gt_ResetingTheArmorShop_Func");
    TriggerAddEventUnitRegion(gt_ResetingTheArmorShop, null, RegionFromId(291), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 006
//--------------------------------------------------------------------------------------------------
bool gt_ResetingTheShardShop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetOwner(UnitFromId(2777), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ResetingTheShardShop_Init () {
    gt_ResetingTheShardShop = TriggerCreate("gt_ResetingTheShardShop_Func");
    TriggerAddEventUnitRegion(gt_ResetingTheShardShop, null, RegionFromId(290), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 005
//--------------------------------------------------------------------------------------------------
bool gt_ResetingTheWeaponShop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetOwner(UnitFromId(240), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ResetingTheWeaponShop_Init () {
    gt_ResetingTheWeaponShop = TriggerCreate("gt_ResetingTheWeaponShop_Func");
    TriggerAddEventUnitRegion(gt_ResetingTheWeaponShop, null, RegionFromId(289), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 001
//--------------------------------------------------------------------------------------------------
bool gt_ResetingThePotionShop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetOwner(UnitFromId(1202), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ResetingThePotionShop_Init () {
    gt_ResetingThePotionShop = TriggerCreate("gt_ResetingThePotionShop_Func");
    TriggerAddEventUnitRegion(gt_ResetingThePotionShop, null, RegionFromId(288), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 004
//--------------------------------------------------------------------------------------------------
bool gt_WhoOwnsTheArmorShop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetOwner(UnitFromId(660), EventPlayer(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WhoOwnsTheArmorShop_Init () {
    gt_WhoOwnsTheArmorShop = TriggerCreate("gt_WhoOwnsTheArmorShop_Func");
    TriggerAddEventUnitRegion(gt_WhoOwnsTheArmorShop, null, RegionFromId(291), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 003
//--------------------------------------------------------------------------------------------------
bool gt_WhoOwnsTheShardShop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetOwner(UnitFromId(2777), EventPlayer(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WhoOwnsTheShardShop_Init () {
    gt_WhoOwnsTheShardShop = TriggerCreate("gt_WhoOwnsTheShardShop_Func");
    TriggerAddEventUnitRegion(gt_WhoOwnsTheShardShop, null, RegionFromId(290), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 002
//--------------------------------------------------------------------------------------------------
bool gt_WhoOwnsTheWeaponShop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetOwner(UnitFromId(240), EventPlayer(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WhoOwnsTheWeaponShop_Init () {
    gt_WhoOwnsTheWeaponShop = TriggerCreate("gt_WhoOwnsTheWeaponShop_Func");
    TriggerAddEventUnitRegion(gt_WhoOwnsTheWeaponShop, null, RegionFromId(289), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 001
//--------------------------------------------------------------------------------------------------
bool gt_WhoOwnsThePotionShop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetOwner(UnitFromId(1202), EventPlayer(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WhoOwnsThePotionShop_Init () {
    gt_WhoOwnsThePotionShop = TriggerCreate("gt_WhoOwnsThePotionShop_Func");
    TriggerAddEventUnitRegion(gt_WhoOwnsThePotionShop, null, RegionFromId(288), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_InitializeShops_Init();
    gt_ResetingTheArmorShop_Init();
    gt_ResetingTheShardShop_Init();
    gt_ResetingTheWeaponShop_Init();
    gt_ResetingThePotionShop_Init();
    gt_WhoOwnsTheArmorShop_Init();
    gt_WhoOwnsTheShardShop_Init();
    gt_WhoOwnsTheWeaponShop_Init();
    gt_WhoOwnsThePotionShop_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitCustomScript();
    InitTriggers();
}
