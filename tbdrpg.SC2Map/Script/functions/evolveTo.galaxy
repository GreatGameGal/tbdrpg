void gf_EvolveTo (Player_r lr_player, string lp_unitName) {
  lr_player.state.evolving = true;
  TriggerEnable(gt_SaveStackCountsOnInventoryEdit, false);
  TriggerEnable(gt_SaveStackCountsPeriodically, false);

  gf_FillInventory(lr_player);
  gf_SaveStackCounts(lr_player);
  UnitCreate(1, lp_unitName, c_unitCreateIgnorePlacement, lr_player.player, UnitGetPosition(lr_player.dragon), UnitGetFacing(lr_player.dragon));
  UnitRemove(lr_player.dragon);
  lr_player.dragon = UnitLastCreated();
  UnitControlGroupAddUnit(lr_player.player, 1, lr_player.dragon);
  gf_PutInventoryinInventory(lr_player);
  BankValueSetFromUnit(lr_player.banks.dragonBank, "Dragon", lr_player.hand, lr_player.dragon);
  gf_LoadStackCounts(lr_player);
  gf_LoadSkills(lr_player);
  
  // Add stats.
  UnitBehaviorAddPlayer(lr_player.dragon, "AddAgility", lr_player.player, lr_player.stats.agility);
  UnitBehaviorAddPlayer(lr_player.dragon, "AddDexterity", lr_player.player, lr_player.stats.dexterity);
  UnitBehaviorAddPlayer(lr_player.dragon, "AddIntelligence", lr_player.player, lr_player.stats.intelligence);
  UnitBehaviorAddPlayer(lr_player.dragon, "AddStrength", lr_player.player, lr_player.stats.strength);
  UnitBehaviorAddPlayer(lr_player.dragon, "AddVitality", lr_player.player, lr_player.stats.vitality);
  UnitBehaviorAddPlayer(lr_player.dragon, "BlessingOfDrache", lr_player.player, lr_player.stats.reborn.count);

  BankValueSetFromUnit(lr_player.banks.dragonBank, "Dragon", lr_player.hand, lr_player.dragon);
  if (lr_player.skills.fireSkin) {
    UnitBehaviorAddPlayer(lr_player.dragon, "FireSkin", lr_player.player, 1);
  }
  if (lr_player.skills.allSeeingEye) {
    UnitBehaviorAddPlayer(lr_player.dragon, "AllSeeingEye", lr_player.player, 1);
  }
  lr_player.stats.attributePoints += 5;
  lr_player.stats.attributeText = IntToText(lr_player.stats.attributePoints);
  libNtve_gf_SetDialogItemText(lr_player.stats.attributeDialog.textBox, lr_player.stats.attributeText, lr_player.playerGroupSingle);
  gf_ShowStats(lr_player);
  UnitSelect(lr_player.dragon, lr_player.player, true);
  gf_ReapplyBuffs(lr_player);
  lib_talent_gf_GrantTalentPoints(1, lr_player);
  Wait(5.0, c_timeGame);
  TriggerEnable(gt_SaveStackCountsOnInventoryEdit, true);
  TriggerEnable(gt_SaveStackCountsPeriodically, true);
  lr_player.state.evolving = false;
}
