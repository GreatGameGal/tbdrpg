struct DragonType {
  string[5] unitNames;
  string talentBuildName;
  string bankName;
  string introTheme;
  fixed introThemeDuration;
  int talentBuildColor;
  text talentBuildTitle;
};

struct Arena {
  int wins;
  int losses;
};

struct Currency {
  int gold;
  int pvpPoints;
  int shards;
};

struct Dialog {
  // Standard dialogs
  int state;
  int textBox;
  int reward;
  int recommendedLevel;
  int accept;
  int decline;
  string textVal;
  // Reborn dialog
  int[10] pointLabel;
  int[10] pointButton;
  // Talent Dialog
  int button;
};

struct DyingTimer {
  timer time;
  int window;
};

struct Reborns {
  int count;
  int maxHP;
  int maxMP;
  int defense;
  int movementSpeed;
  int attackSpeed;
  int dodge;
  int miss;
  int goldDrop;
  int itemDrop;
  int regen;
  int points;
  Dialog dialog;
  Dialog buttonDialog;
};

struct Quest {
  int state;
  int objective;
  int kills;
  int progress;
  int textTag;
  int ping;
};

struct Quests {
  bool talking;
  Dialog questDialog;
  Dialog talkDialog;
  Dialog rewardDialog;
  
  Quest[10] storyQuests;
  Quest[6] manaQuests;
  Quest[2] baseQuests;
  Quest[1] detsefniQuests;
  Quest[1] sergeantListerQuests;
  Quest[1] greedQuests;
  Quest[1] madelineQuests;
  Quest[1] malinQuests;
  Quest[1] ampQuests;
  Quest[1] altossQuests;
  Quest[1] oleumQuests;
  Quest[1] serynQuests;

  unit manaQuest0Armour;
};

struct Skills {
  int frostSpike;
  int blizzard;
  int subzero;
  int frozenArmour;
  int fireball;
  int fireClaw;
  int flameEgg;
  int inferno;
  int nova;
  
  bool fireSkin;
  bool allSeeingEye;
  bool warningOcculus;
  bool revengeFacet;
  bool rebirthCrystal;
  bool returnJewel;
  bool protectionStone;
  bool quickeningRing;
};

struct States {
  bool beatGame;
  bool dying;
  bool evolving;
  bool fightWithPlagam;
  bool fightWithSremagsi;
  bool fightWithSyrital;
  bool fightWithGuardians;
  bool inCinematic;
  bool infestationSpawned;
  bool isIdle;
  bool isSavingExiting;
  bool preventSave;
  bool reapplyingBuffs;
  bool seenIntro;
};

struct Stats {
  int level;
  int agility;
  int dexterity;
  int intelligence;
  int strength;
  int vitality;
  int attributePoints;
  bool addingAttribute;
  text attributeText;
  Arena arena;
  Reborns reborn;
  Dialog attributeDialog;
};

struct Banks {
  bank stashBank;
  bank rebornBank;
  bank currencyBank;
  bank talentBank;
  bank dragonBank;
  bool accessing;
};

struct Verification {
  bool hrc;
  bool hpc;
  bool dragon;
};

struct Stash {
  unit stashUnit;
  point location;
};

struct Player {
  Banks banks;
  Currency currency;
  Dialog locationDialog;
  DyingTimer dyingTimer;
  Quests quests;
  Skills skills;
  Stash stash;
  States state;
  Stats stats;
  TalentTree talent;
  Verification verification;
  bool[5] waypointUnlocked;
  int player;
  int type;
  fixed[gv_StackableTypeCount] stackableCount;
  playergroup playerGroupSingle;
  point respawnPoint;
  revealer guardianRevealer;
  revealer zauberer1stFormRevealer;
  sound syritalTheme;
  sound plagamTheme;
  sound sremagsiTheme;
  string hand;
  string locationString;
  text locationText;
  unit dragon;
  unit[6][25] inventory;
};
